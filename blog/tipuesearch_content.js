var tipuesearch = {"pages":[{"tags":"misc","title":"About","text":"2016Fall 修課成員網誌","url":"./pages/about/"},{"tags":"onshape HW","title":"12/30","text":"組裝影片","url":"./1230.html"},{"tags":"onshape HW","title":"12/23","text":"3D列印機零件 支柱 連接桿 底盤 圓盤 自製3D列印機","url":"./1223.html"},{"tags":"onshape HW","title":"12/16","text":"Onshape 初體驗畫圖 part1 2017 01 15 19 52 50 654 from 謝孟哲 on Vimeo . Onshape 初體驗畫圖 part2 2017 01 15 19 33 11 390 from 謝孟哲 on Vimeo . 心得:第一次用別的軟體畫圖還有錄影，非常棒的體驗，讓我更進一步了解到這門課的樂趣所在。","url":"./1216.html"},{"tags":"onshape HW","title":"40423105 onshape分組作業","text":"onshape 作業 2016 11 09 16 12 49 398 from 40423105 on Vimeo . 2016 11 15 23 26 57 93 from 40423105 on Vimeo . 2016 11 15 23 35 33 433 from 40423105 on Vimeo . 2016 11 15 23 41 14 468 from 40423105 on Vimeo . 2016 12 09 00 45 22 932 from 40423105 on Vimeo . 2016 12 17 12 58 04 557 from 40423105 on Vimeo .","url":"./40423105-onshapefen-zu-zuo-ye.html"},{"tags":"onshape HW","title":"12/02","text":"Solvespace 組合圖","url":"./1202.html"},{"tags":"onshape HW","title":"11/25","text":"Solvespace 1. Parts (零件繪製) 範例檔案: http://solvespace.com/bracket.pl An introductory tutorial is available, in which we draw the same part that is shown in the demo video. This covers most of the basic features of SolveSpace, including sketches, constraints, extrusions, and Boolean operations. When we first run SolveSpace, we will begin with an empty part. Initially, our view of the part will be oriented onto the XY plane; the label for that plane is displayed at the bottom left of the screen (#XY, in dark grey). The axes are also indicated by the three colored arrows at the bottom left; the X, Y, and Z axes are drawn in red, green, and blue respectively. When we hover the mouse over any entity, constraint, or other object in the sketch, that object will appear highlighted in yellow. For example, the XY plane, which is drawn as a dashed square, will appear highlighted when we hover the mouse over it. The YZ and ZX planes initially look like dashed lines, because they are being viewed on edge; but they still appear highlighted in yellow when we hold the mouse over them. It is similarly possible to highlight the X, Y, and Z axes (which are drawn as arrows), or the origin (which like all points is drawn as a green square). 翻譯 : 我們提供了一個介紹性教程，其中我們繪製演示視頻中顯示的相同部分。 這涵蓋了SolveSpace的大部分基本功能，包括草圖，約束，擠出和布爾運算。 當我們首次運行SolveSpace時，我們將從一個空的部分開始。最初，我們對零件的視圖將被定向到XY平面上;該平面的標籤顯示在屏幕的左下角（#XY，深灰色）。軸也由左下角的三個彩色箭頭指示; X，Y和Z軸分別繪製為紅色，綠色和藍色。 當我們將鼠標懸停在草圖中的任何實體，約束或其他對像上時，該對象將以黃色突出顯示。例如，當我們將鼠標懸停在其上時，繪製為虛線正方形的XY平面將突出顯示。 YZ和ZX平面最初看起來像虛線，因為它們被邊緣觀看;但是當我們把鼠標放在他們上面時，它們仍然顯示為黃色。同樣可以突出顯示X，Y和Z軸（以箭頭繪製）或原點（像所有點都繪製為綠色方塊）。 Extrude (平行長出或除料) STL 格式 範例:平行長出 STL 格式 範例:除料 Lathe (旋轉繞行長出或除料) Export Triangle Mesh STL 格式 three.js 2. Assembly (零件組立)","url":"./1125.html"},{"tags":"onshape HW","title":"11/18","text":"Solvespace 平面四連桿機構模擬 將所得到的點座標的.csv以Excel的畫圖，得到： 首先利用 Brython, 讀取 data 目錄中的 11117.csv 座標檔案, 然後以 splitlines() 及 split() 取出各點的 x 座標與 y 座標後, 將點連成路徑曲線如下: window.onload=function(){ brython(1); } from browser import document as doc from browser import html import math # 準備繪圖畫布 canvas = doc[\"fourbar\"] container1 = doc['container1'] ctx = canvas.getContext(\"2d\") fourbar_data = open(\"./../w7/11117.csv\").read() fourbar_list = fourbar_data.splitlines() #container1 <= fourbar_list[0] # 以下可以利用 ctx 物件進行畫圖 # 先畫一條直線 ctx.beginPath() # 設定線的寬度為 1 個單位 ctx.lineWidth = 1 # 利用 transform 將 y 座標反轉, 且 offset canvas.height # (X scale, X skew, Y skew, Y scale, X offset, Y offset) # 配合圖形位置進行座標轉換 ctx.transform(1, 0, 0, -1, canvas.width/2+250, canvas.height/2+100) # 畫出 x 與 y 座標線 # 各座標值放大 8 倍 ratio = 8 ''' ctx.moveTo(0, 0) ctx.lineTo(0, 100) ctx.moveTo(0, 0) ctx.lineTo(100, 0) ''' ctx.moveTo(0, 0) ctx.lineTo(-30*ratio, 0) start_point = fourbar_list[0].split(\",\") ctx.moveTo(float(start_point[0])*ratio, float(start_point[1])*ratio) count = 0 for data in fourbar_list[1:]: point = data.split(\",\") #count = count + 1 #container1 <= str(count) + \":\" + point[0] + \",\" + point[1] #container1 <= html.BR() ctx.lineTo(float(point[0])*ratio, float(point[1])*ratio) # 設定顏色為藍色, 也可以使用 \"rgb(0, 0, 255)\" 字串設定顏色值 ctx.strokeStyle = \"blue\" # 實際執行畫線 ctx.stroke() ctx.closePath()","url":"./1118.html"},{"tags":"onshape HW","title":"11/04","text":"","url":"./1104.html"},{"tags":"HW","title":"10/28","text":"","url":"./1028.html"},{"tags":"HW","title":"10/21","text":"","url":"./1021.html"},{"tags":"HW","title":"10/14","text":"","url":"./1014.html"},{"tags":"HW","title":"10/07","text":"","url":"./1007.html"},{"tags":"HW","title":"9/30","text":"","url":"./930.html"},{"tags":"上課筆記","title":"9/23","text":"","url":"./923.html"}]};